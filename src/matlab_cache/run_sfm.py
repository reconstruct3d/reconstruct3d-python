# Autogenerated with SMOP 
from smop.core import *
# run_sfm.m

    clear('all')
    close_('all')
    clc
    # Load SIFT keypoints for three images
    load('data.mat')
    x1=data.x1
# run_sfm.m:5
    x2=data.x2
# run_sfm.m:6
    x3=data.x3
# run_sfm.m:7
    # Load camera calibration parameters
    K=data.K
# run_sfm.m:10
    # Estimate fundamental matrix
    F=EstimateFundamentalMatrix(x1,x2)
# run_sfm.m:13
    # Estimate essential matrix from fundamental matrix
    E=EssentialMatrixFromFundamentalMatrix(F,K)
# run_sfm.m:16
    C=data.C
# run_sfm.m:18
    R=data.R
# run_sfm.m:19
    # Obtain 3d points using correct camera pose
    X=LinearTriangulation(K,zeros(3,1),eye(3),C,R,x1,x2)
# run_sfm.m:22
    # Find the third camera pose using Linear PnP
    C3,R3=LinearPnP(X,x3,K,nargout=2)
# run_sfm.m:25
    # Calculate reprojection points
    x1p=dot(K,X.T)
# run_sfm.m:29
    x1p=x1p / repmat(x1p[3,:],cat(3,1))
# run_sfm.m:30
    x2p=dot(dot(K,R),(X.T - repmat(C,cat(1,size(X,1)))))
# run_sfm.m:31
    x2p=x2p / repmat(x2p[3,:],cat(3,1))
# run_sfm.m:32
    x3p=dot(dot(K,R3),(X.T - repmat(C3,cat(1,size(X,1)))))
# run_sfm.m:33
    x3p=x3p / repmat(x3p[3,:],cat(3,1))
# run_sfm.m:34
    # Display correspondence points between SIFT keypoints and reprojection
    DisplayCorrespondence(data.img1,x1,x1p[1:2,:].T)
    DisplayCorrespondence(data.img2,x2,x2p[1:2,:].T)
    DisplayCorrespondence(data.img3,x3,x3p[1:2,:].T)
    # Nonlinear triangulation
    X=Nonlinear_Triangulation(K,zeros(3,1),eye(3),C,R,C3,R3,x1,x2,x3,X)
# run_sfm.m:42
    # Display point cloud and 3 camera poses
    Display3D(cellarray([zeros(3,1),C,C3]),cellarray([eye(3),R,R3]),X)
    # Calculate reprojection points
    x1p=dot(K,X.T)
# run_sfm.m:48
    x1p=x1p / repmat(x1p[3,:],cat(3,1))
# run_sfm.m:49
    x2p=dot(dot(K,R),(X.T - repmat(C,cat(1,size(X,1)))))
# run_sfm.m:50
    x2p=x2p / repmat(x2p[3,:],cat(3,1))
# run_sfm.m:51
    x3p=dot(dot(K,R3),(X.T - repmat(C3,cat(1,size(X,1)))))
# run_sfm.m:52
    x3p=x3p / repmat(x3p[3,:],cat(3,1))
# run_sfm.m:53
    # Display correspondence points between SIFT keypoints and reprojection
    DisplayCorrespondence(data.img1,x1,x1p[1:2,:].T)
    DisplayCorrespondence(data.img2,x2,x2p[1:2,:].T)
    DisplayCorrespondence(data.img3,x3,x3p[1:2,:].T)